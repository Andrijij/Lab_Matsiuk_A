import numpy as np
from sklearn.model_selection import train_test_split, GridSearchCV
from sklearn.neural_network import MLPClassifier
from sklearn.metrics import accuracy_score

# Дані з нулями та одиницями
zero = """
.xxx
.x.x
.x.x
.xxx

xxxx
x..x
x..x
xxxx

xxx.
x.x.
x.x.
xxx.

xxx.
x.x.
xxx.
....

.xxx
.x.x
.xxx
....

....
xxx.
x.x.
xxx.

....
.xxx
.x.x
.xxx

.xx.
x..x
x..x
.xx.

..x.
.x.x
.x.x
..x.

.x..
x.x.
x.x.
.x..
"""

one = """
...x
...x
...x
...x

..x.
..x.
..x.
..x.

.x..
.x..
.x..
.x..

x...
x...
x...
x...

..xx
...x
...x
...x

...x
..xx
...x
...x

.xx.
..x.
..x.
..x.

xx..
.x..
.x..
xxx.

.xx.
..x.
..x.
.xxx

.x..
xx..
.x..
.x..
"""

# Підготовка даних
n = zero + one
n = n.split('\n\n')
x = []
for i in n:
    s = i.replace('\n', '').replace('.', '0').replace('x', '1')
    x.append(np.array([int(e) for e in s]))
x = np.array(x)
y = np.array([0]*10 + [1]*10)  # 10 нулів, 10 одиниць

# Розбиття на тренувальні і тестові дані
X_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.3, random_state=42)

# Модель MLP з гіперпараметрами
mlp = MLPClassifier(max_iter=1000, random_state=42)

# Налаштування гіперпараметрів для оптимізації
param_grid = {
    'hidden_layer_sizes': [(50,), (100,), (50, 50), (100, 50)],
    'activation': ['relu', 'tanh', 'logistic'],
    'solver': ['adam', 'sgd'],
    'alpha': [0.0001, 0.001, 0.01],
    'learning_rate': ['constant', 'adaptive']
}

# Оптимізація гіперпараметрів з GridSearchCV
grid_search = GridSearchCV(mlp, param_grid, cv=3, n_jobs=-1, verbose=2)
grid_search.fit(X_train, y_train)

# Виведення найкращих гіперпараметрів
print(f"Найкращі гіперпараметри: {grid_search.best_params_}")

# Остаточна модель
best_model = grid_search.best_estimator_

# Оцінка якості моделі
y_pred = best_model.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
print(f"Точність моделі: {accuracy}")

# Прогноз для довільного прикладу
example = np.array([0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1])
predicted_label = best_model.predict([example])
print(f"Прогноз для довільного прикладу: {predicted_label[0]}")
