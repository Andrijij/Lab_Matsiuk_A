import numpy as np
import matplotlib.pyplot as plt
from sklearn.preprocessing import PolynomialFeatures
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import cross_val_score
from sklearn.metrics import r2_score

# Значення для 14 варіанту завдання 3
a = 2
b = 0
c = 3
d = 1

# Генерація даних
x = np.arange(0, 20)
y = a*x**3 + b*x**2 + c*x + d + np.random.normal(0, 10**3, 20)

# Перетворюємо x для поліноміальної регресії
x = x.reshape(-1, 1)

# Створюємо поліноміальні ознаки (3-й степінь)
poly = PolynomialFeatures(degree=3)
x_poly = poly.fit_transform(x)

# Створюємо модель лінійної регресії
model = LinearRegression()

# Використовуємо крос-валідацію для перевірки моделі
scores = cross_val_score(model, x_poly, y, cv=5, scoring='r2')
mean_score = np.mean(scores)

# Навчаємо модель
model.fit(x_poly, y)

# Прогноз
y_pred = model.predict(x_poly)

# Коефіцієнт детермінації
r_squared = r2_score(y, y_pred)

# Виводимо результати
print(f"Коефіцієнти моделі: {model.coef_}")
print(f"Вільний член: {model.intercept_}")
print(f"Середнє значення R² після крос-валідації: {mean_score}")
print(f"Коефіцієнт детермінації (R²) на всіх даних: {r_squared}")

# Побудова графіку
plt.scatter(x, y, color="blue", label="Дані")
plt.plot(x, y_pred, color="red", label="Поліноміальна регресія")
plt.title("Поліноміальна регресія (Варіант 14)")
plt.xlabel("x")
plt.ylabel("y")
plt.legend()
plt.grid(True)
plt.show()
